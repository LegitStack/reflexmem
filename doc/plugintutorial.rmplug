;how to set a hotkey key procnumber - must be first thing you do.
hkps {END} 3

;proc 0 is the natural entry point to the program.
;If you want it to constantly run, and wait for user hotkey then make proc 0 look like this:
;proc 0
;  loop
;  endl
;endp
;here's a sudo-function. only numbers (as the name) allowed. No need to specify arguments
proc 0
  ; this how you make comment
  ;

  ; make a call:
  goto 1

  ; reference a variable
  msgbox(64,"01","hello " & $v[1] )

  ; reference elements in an array
  msgbox(64,"01","hello " & $a[1][1] & $a[1][2] & $a[1][3] )

  goto 4

;end sudo function
endp

proc 1

  ; make a variable - use number as variable name
  set 1 "world"
  msgbox(64,"1","hello " & $v[1])

  ; variable substitution available on name or value.
  set 9 1
  set $v[9] "world!"
  msgbox(64,"1","hello " & $v[1])

  ; make an array - substitution not not allowed when creating these, its litteral
  set 1 "a" b "c" d "e" f

  ; make some regular autoit code
  msgbox(64,"1","hello world")

  ; 2 max arguments allowed. arguments only allow single words or numbers or variables
  goto 2 hello $v[1]

  ; how to access the return
  msgbox(64,"1-returned",$return)
Endp

proc 2 args are ignored if you write them in here.

  ; here's how to use args, 1 or 2 args allowed
  msgbox(64, "2", $arg1 & " " & $arg2)

  ; if you want to return a value simply add it onto the end of this line
Endp goodbyeworld


proc 3 called from hotkey

  msgbox(64, "3", "called from hotkey")

Endp

code outside procs are ignored, like comments


proc 4 if statements are ift statments NO then

  ift $v[1] == "hello"
    msgbox(64,"4","this is false and wont be executed!")
  elif $v[1] == "world"
    msgbox(64,"4","hello ift statement! this is elif")
  endi

  ift $v[1] == "goodbye"
    msgbox(64,"4","this is false and wont be executed!")
  else
    msgbox(64,"4","Hello else statement!")
  endi

  msgbox(64,"4","This code is not in an if statement.")

  set 1 0

  goto 5

endp


proc 5 for small loops recursion should work fine

  ift $v[1] == 3
    msgbox(64,"5","done with loop! please press the END key after you press ok. " & $v[1])

    ;wait so we can test the hotkey command
    sleep(5000)

    goto 6
  else
    msgbox(64,"5",$v[1])
    set 1 $v[1]+1
    goto 5
  endi

endp



proc 6 but for large loops or embedded loops "loop" might work best.

  set 2 0

  loop
    set 2 $v[2]+1
    tooltip($v[2])
    sleep(1000)
    ift $v[2] >= 2
      bklp
    endi
  endl

  set 3 0
  set 4 0

  loop
    loop
      set 3 $v[3]+1
      tooltip($v[3])
      sleep(1000)
      ift $v[3] >= 2
        bklp
      endi
    endl
    set 4 $v[4]+1
    tooltip($v[4])
    sleep(1000)
    ift $v[4] >= 2
      bklp
    endi
  endl

  msgbox(64,"6","This concludes our tour of the rmplugin language!")

endp
