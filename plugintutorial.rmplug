;how to set a hotkey key procnumber
hkps {END} 3

;here's a sudo-function. only numbers (as the name) allowed. No need to specify arguments
proc 0
  ;heres a comment

  ; make a call:
  goto 1

  ; reference a variable
  msgbox(64,"01","hello " & $v[1] )

  ; reference elements in an array
  msgbox(64,"01","hello " & $a[1][1] & $a[1][2] & $a[1][3] )

  goto 4

;end sudo function
endp

proc 1

  ; make a variable only numbers (as the name) allowed
  set 1 world

  ; make an array
  set 1 a b c d e f g

  ; make some regular autoit code
  msgbox(64,"1","hello world")

  ; 8 max arguments allowed arguments only allow single words or numbers or variables
  goto 2 hello $v[1]

  ; how to access the return
  msgbox(64,"1-returned",$return)
Endp

proc 2 args are ignored if you write them in here.

  ;here's how to use args, 1 or 2 args allowed
  msgbox(64, "2", $arg1 & " " & $arg2)

  ;  if you want to return a value simply add it onto the end of this line
Endp goodbyeworld


proc 3 called from hotkey

  msgbox(64, "3", "called from hotkey")

Endp

code outside procs are ignored, like comments


proc 4 if statements are ift statments NO then

  ift $v[1] == "hello"
    msgbox(64,"4","this is false and wont be executed!")
  elif $v[1] == "world"
    msgbox(64,"4","hello ift statement! this is elif")
  endi

  ift $v[1] == "goodbye"
    msgbox(64,"4","this is false and wont be executed!")
  else
    msgbox(64,"4","Hello else statement!")
  endi

  msgbox(64,"4","This code is not in an if statement.")

  set 1 0

  goto 5

endp


proc 5 Loops!!! You must use proc as a loop because this has no loops. only recursion.

  ift $v[1] == 3
    msgbox(64,"5","done with loop! please press the END key after you press ok. " & $v[1])

    ;wait so we can test the hotkey command
    sleep(5000)

    msgbox(64,"5","This concludes our tour of the rmplugin language!")
  else
    msgbox(64,"5",$v[1])
    set 1 $v[1]+1
    goto 5
  endi

endp
