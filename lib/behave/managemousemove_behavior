Func ManageMouseMoveBehavior()

	local $hMain_GUI = GUICreate("Mouse Move Behavior",600*$R, 200*$R, -1, -1, -1, -1, $hGUI)
	GUICtrlCreateLabel("How would you like the mouse to move?", 20*$R, 20*$R, 560*$R, 35*$R)
	GUICtrlSetStyle(-1, $SS_CENTER)
	local $hmButton1 = GUICtrlCreateButton("by X and Y Coordinates", 		20*$R, 80*$R, 160*$R, 60*$R)
	local $hmButton2 = GUICtrlCreateButton("by X and Y Variables", 			220*$R, 80*$R, 160*$R, 60*$R)
	local $hmButton3 = GUICtrlCreateButton("to an Image on the Screen", 420*$R, 80*$R, 160*$R, 60*$R)
	GUISetState()

	While 1
		Switch GUIGetMsg()
			Case $GUI_EVENT_CLOSE
				GUIDelete($hMain_GUI)
				ExitLoop
			Case $hmButton1
				MouseMoveLocation()
				GUIDelete($hMain_GUI)
				ExitLoop
			Case $hmButton2
				MouseMoveVariables()
				GUIDelete($hMain_GUI)
				ExitLoop
			Case $hmButton3
				MouseMoveImage()
				GUIDelete($hMain_GUI)
				ExitLoop
			EndSwitch
	WEnd
EndFunc


Func MouseMoveLocation()
	$msgbox = msgbox(1, "Mouse Move Behavior", "Click ok, then click on the screen at the location you'd like the mouse to move")
	if $msgbox == 1 then
		Local $aPos
		While 1
		  $aPos = MouseGetPos()
			ToolTip("X: " & $aPos[0] & "  Y: " & $aPos[1])
		  If _IsPressed("01") Then
				$aPos = MouseGetPos()
		    ExitLoop
		  endIf
		WEnd
		Local $xcord = InputBox("Mouse Move Behavior", "What X coordinate would you like the mouse to move to?", $aPos[0], "")
		Local $ycord = InputBox("Mouse Move Behavior", "What X coordinate would you like the mouse to move to?", $aPos[1], "")
		local $totrig = "mouse " & $xcord & " " & $ycord
		MouseMoveSetSpeed($totrig)
	endif
EndFunc


Func MouseMoveVariables()
	Local $xcord
	Local $ycord
	Local $sAnswer = InputBox("Mouse Move by Variable Behavior", "Which variable is the X coordinate? (0 to 31)", "1", "")
	if $sAnswer <> "" then
		$xcord = "$uservar" & $sAnswer
		Local $sAnswer = InputBox("Mouse Move by Variable Behavior", "Which variable is the Y coordinate? (0 to 31)", "1", "")
		if $sAnswer <> "" then
			$ycord = "$uservar" & $sAnswer
			$totrig = "mouse " & $xcord & " " & $ycord
			MouseMoveSetSpeed($totrig)
		endif
	endif
EndFunc


Func MouseMoveImage()
	;$hImage = dialog box or screen
	;_ImageSearchArea('C:\Users\jmiller.ADS-WCF\AppData\Roaming\ReflexMem\scripts\images\2.bmp',1,0,0,3440,1440, $X1, $Y1, 25)

	Local $iX1, $iY1, $iX2, $iY2, $aPos, $sMsg, $sBMP_Path

	; Create GUI
	local $hMain_GUI = GUICreate("Mouse Move to Image Behavior", 380*$R, 80*$R, -1, -1, -1, -1, $hGUI)
	local $hRect_Button   = GUICtrlCreateButton("Capture Image On Screen",  20*$R, 20*$R, 160*$R, 40*$R)
	local $sFile_Button   = GUICtrlCreateButton("Select Image From File",  200*$R, 20*$R, 160*$R, 40*$R)
	GUISetState()

	local $i, $sFile
	While 1
    Switch GUIGetMsg()
      Case $GUI_EVENT_CLOSE
				GUIDelete($hMain_GUI)
        ExitLoop
      Case $hRect_Button
	      GUISetState(@SW_HIDE, $hMain_GUI)
	      Mark_Rect($iX1, $iY1, $iX2, $iY2, $aPos, $sMsg, $sBMP_Path)
	      ; Capture selected area
				$i = 0
				While FileExists(GetScriptsPath("images") & $i & ".bmp")
					$i = $i + 1
				WEnd
	      $sBMP_Path = GetScriptsPath("images") & $i & ".bmp"
	    	_ScreenCapture_Capture($sBMP_Path, $iX1, $iY1, $iX2, $iY2, False)
	      GUISetState(@SW_SHOW, $hMain_GUI)
	      ; Display image
	      ;$hBitmap_GUI = GUICreate("Selected Rectangle", $iX2 - $iX1 + 1, $iY2 - $iY1 + 1, 100, 100)
	      ;$hPic = GUICtrlCreatePic(@ScriptDir & "\Rect.bmp", 0, 0, $iX2 - $iX1 + 1, $iY2 - $iY1 + 1)
	      ;GUISetState()
				GUIDelete($hMain_GUI)
				GetAreaImageScreenBehavior($sBMP_Path)
        ExitLoop
			Case $sFile_Button
				local $sFile = FileOpenDialog("Choose Image...", @DesktopCommonDir, "All (*.*)")
				if $sFile == "" then
					GUIDelete($hMain_GUI)
					ExitLoop
				endif
				GUIDelete($hMain_GUI)
				GetAreaImageScreenBehavior($sFile)
        ExitLoop

	    EndSwitch

	WEnd

EndFunc


Func GetAreaImageScreenBehavior($imagefile)

	Local $acc = InputBox("Move Mouse to Image Behavior", "how tolerant do you want this image to be? (0 = exact image, 255 = fully tolerant)", "25", "")
	if @error == 1 then
		return
	endif
	Local $iX1, $iY1, $iX2, $iY2, $aPos, $sMsg, $sBMP_Path
	; Create GUI
	local $hMain_GUI = GUICreate("Move Mouse to Image Behavior", 380*$R, 80*$R, -1, -1, -1, -1, $hGUI)
	local $sRect_Button   = GUICtrlCreateButton("Select Region on Screen",  20*$R, 20*$R, 160*$R, 40*$R)
	local $sFull_Button   = GUICtrlCreateButton("Search Full Screen",  200*$R, 20*$R, 160*$R, 40*$R)

	GUISetState()

	local $totrig

	_GDIPlus_Startup()
		Local $hImage = _GDIPlus_ImageLoadFromFile($imagefile)
			If @error Then
			    MsgBox(16, "Error", "Does the file exist?")
			    Exit 1
			EndIf
			local $xh = _GDIPlus_ImageGetHeight($hImage)
			local $xw = _GDIPlus_ImageGetWidth($hImage)
		_GDIPlus_ImageDispose($hImage)
	_GDIPlus_ShutDown()


	While 1
    Switch GUIGetMsg()
      Case $GUI_EVENT_CLOSE
				GUIDelete($hMain_GUI)
        ExitLoop
      Case $sRect_Button
	      GUISetState(@SW_HIDE, $hMain_GUI)
	      Mark_Rect($iX1, $iY1, $iX2, $iY2, $aPos, $sMsg, $sBMP_Path)
	      ; Capture selected area
	      GUISetState(@SW_SHOW, $hMain_GUI)
				$totrig = "mouseimage " & $imagefile & " " & $iX1 & " " & $iY1 & " " & $iX2 & " " & $iY2 & " " & $acc
				MouseMoveSetSpeed($totrig)
				GUIDelete($hMain_GUI)
        ExitLoop
			Case $sFull_Button
				$totrig = "mouseimage " & $imagefile & " " & "0" & " " & "0" & " " & @DesktopWidth & " " & @DesktopHeight & " " & $acc
				MouseMoveSetSpeed($totrig)
				GUIDelete($hMain_GUI)
        ExitLoop
	    EndSwitch
	WEnd
EndFunc


Func MouseMoveSetSpeed($totrig)
	Local $sAnswer = InputBox("Mouse Move Set Speed Behavior", "At what speed should the mouse move? (0 = instant .... 100 = slow)", "10", "")
	if $sAnswer <> "" then
		$totrig = $totrig & " " & $sAnswer
		AddToBehavior($totrig)
	else
		$totrig = $totrig & " 10"
		AddToBehavior($totrig)
	endif
EndFunc
